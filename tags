!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ColDevicons_init	vim-custom-code/plugins/color_devicons_alt.vim	/^function! ColDevicons_init()$/;"	f
CompletionVisualisation	ptpython/config.py	/^from ptpython.layout import CompletionVisualisation$/;"	i
DetectIntelGPU	bin/screenfetch	/^DetectIntelGPU() {$/;"	f
DeviconsColors	vim-custom-code/plugins/color_devicons.vim	/^function! DeviconsColors(config)$/;"	f
KeyPress	ptpython/config.py	/^from prompt_toolkit.key_binding.input_processor import KeyPress$/;"	i
Keys	ptpython/config.py	/^from prompt_toolkit.keys import Keys$/;"	i
TRAPWINCH	zshrc_prompts.zsh	/^TRAPWINCH ()$/;"	f
Token	ptpython/config.py	/^from pygments.token import Token$/;"	i
ViInsertMode	ptpython/config.py	/^from prompt_toolkit.filters import ViInsertMode$/;"	i
_	ptpython/config.py	/^    def _(event):$/;"	f	function:configure
__all__	ptpython/config.py	/^__all__ = ($/;"	v
_custom_ui_colorscheme	ptpython/config.py	/^_custom_ui_colorscheme = {$/;"	v
_omz_osx_get_frontmost_app	zshrc_aliases.zsh	/^function _omz_osx_get_frontmost_app() {$/;"	f
ahelp	zshrc_aliases.zsh	/^function ahelp {$/;"	f
asciiText	bin/screenfetch	/^asciiText () {$/;"	f
bar	bin/neofetch	/^bar() {$/;"	f
cache	bin/neofetch	/^cache() {$/;"	f
cache_uname	bin/neofetch	/^cache_uname() {$/;"	f
cdf	zshrc_aliases.zsh	/^function cdf() {$/;"	f
color	bin/neofetch	/^color() {$/;"	f
colorNumberToCode	bin/screenfetch	/^colorNumberToCode () {$/;"	f
colorize	bin/screenfetch	/^colorize () {$/;"	f
colour	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:colour(r, g, b)$/;"	f
configure	ptpython/config.py	/^def configure(repl):$/;"	f
customlines	bin/screenfetch	/^customlines () {$/;"	f
decode_url	bin/neofetch	/^decode_url() {$/;"	f
detectColors	bin/screenfetch	/^detectColors () {$/;"	f
detectcpu	bin/screenfetch	/^detectcpu () {$/;"	f
detectde	bin/screenfetch	/^detectde () {$/;"	f
detectdisk	bin/screenfetch	/^detectdisk () {$/;"	f
detectdistro	bin/screenfetch	/^detectdistro () {$/;"	f
detectdroid	bin/screenfetch	/^detectdroid () {$/;"	f
detectgpu	bin/screenfetch	/^detectgpu () {$/;"	f
detectgtk	bin/screenfetch	/^detectgtk () {$/;"	f
detecthost	bin/screenfetch	/^detecthost () {$/;"	f
detectkernel	bin/screenfetch	/^detectkernel () {$/;"	f
detectmem	bin/screenfetch	/^detectmem () {$/;"	f
detectpkgs	bin/screenfetch	/^detectpkgs () {$/;"	f
detectres	bin/screenfetch	/^detectres () {$/;"	f
detectshell	bin/screenfetch	/^detectshell () {$/;"	f
detectshell_ver	bin/screenfetch	/^detectshell_ver () {$/;"	f
detectuptime	bin/screenfetch	/^detectuptime () {$/;"	f
detectwm	bin/screenfetch	/^detectwm () {$/;"	f
detectwmtheme	bin/screenfetch	/^detectwmtheme () {$/;"	f
dir	bin/neofetch	/^    dir() { ((packages+=$#)); pac "$#"; }$/;"	f
displayHelp	bin/screenfetch	/^displayHelp () {$/;"	f
displayVersion	bin/screenfetch	/^displayVersion () {$/;"	f
display_image	bin/neofetch	/^display_image() {$/;"	f
dynamic_prompt	bin/neofetch	/^dynamic_prompt() {$/;"	f
editor_find	zshrc_aliases.zsh	/^function editor_find() {$/;"	f
editor_which	zshrc_aliases.zsh	/^function editor_which() {$/;"	f
err	bin/neofetch	/^err() {$/;"	f
errorOut	bin/screenfetch	/^errorOut () {$/;"	f
find_env	zshrc_env_plugin.zsh	/^function find_env()$/;"	f
g:coldevicons_colormap	vim-custom-code/plugins/color_devicons_alt.vim	/^    let g:coldevicons_colormap = {$/;"	v
g:coldevicons_filetypes	vim-custom-code/plugins/color_devicons_alt.vim	/^    let g:coldevicons_filetypes = 'nerdtree,startify'$/;"	v
g:coldevicons_iconmap	vim-custom-code/plugins/color_devicons_alt.vim	/^    let g:coldevicons_iconmap = {$/;"	v
g:devicons_colors	vim-custom-code/plugins/color_devicons.vim	/^let g:devicons_colors = {$/;"	v
g:sol	vim-custom-code/plugins/color_devicons.vim	/^		let g:sol = {$/;"	v
g:sol	vim-custom-code/startify.vim	/^let g:sol = {$/;"	v
getColor	bin/screenfetch	/^getColor () {$/;"	f
get_args	bin/neofetch	/^get_args() {$/;"	f
get_ascii	bin/neofetch	/^get_ascii() {$/;"	f
get_battery	bin/neofetch	/^get_battery() {$/;"	f
get_bold	bin/neofetch	/^get_bold() {$/;"	f
get_cache_dir	bin/neofetch	/^get_cache_dir() {$/;"	f
get_cols	bin/neofetch	/^get_cols() {$/;"	f
get_cpu	bin/neofetch	/^get_cpu() {$/;"	f
get_cpu_usage	bin/neofetch	/^get_cpu_usage() {$/;"	f
get_de	bin/neofetch	/^get_de() {$/;"	f
get_disk	bin/neofetch	/^get_disk() {$/;"	f
get_distro	bin/neofetch	/^get_distro() {$/;"	f
get_distro_ascii	bin/neofetch	/^get_distro_ascii() {$/;"	f
get_font	bin/neofetch	/^get_font() {$/;"	f
get_full_path	bin/neofetch	/^get_full_path() {$/;"	f
get_gpu	bin/neofetch	/^get_gpu() {$/;"	f
get_gpu_driver	bin/neofetch	/^get_gpu_driver() {$/;"	f
get_icons	bin/neofetch	/^get_icons() {$/;"	f
get_image_size	bin/neofetch	/^get_image_size() {$/;"	f
get_image_source	bin/neofetch	/^get_image_source() {$/;"	f
get_kernel	bin/neofetch	/^get_kernel() {$/;"	f
get_line_break	bin/neofetch	/^    get_line_break() { :; }$/;"	f
get_local_ip	bin/neofetch	/^get_local_ip() {$/;"	f
get_locale	bin/neofetch	/^get_locale() {$/;"	f
get_memory	bin/neofetch	/^get_memory() {$/;"	f
get_model	bin/neofetch	/^get_model() {$/;"	f
get_os	bin/neofetch	/^get_os() {$/;"	f
get_packages	bin/neofetch	/^get_packages() {$/;"	f
get_ppid	bin/neofetch	/^get_ppid() {$/;"	f
get_process_name	bin/neofetch	/^get_process_name() {$/;"	f
get_public_ip	bin/neofetch	/^get_public_ip() {$/;"	f
get_resolution	bin/neofetch	/^get_resolution() {$/;"	f
get_shell	bin/neofetch	/^get_shell() {$/;"	f
get_simple	bin/neofetch	/^get_simple() {$/;"	f
get_song	bin/neofetch	/^get_song() {$/;"	f
get_song_dbus	bin/neofetch	/^    get_song_dbus() {$/;"	f
get_style	bin/neofetch	/^get_style() {$/;"	f
get_term	bin/neofetch	/^get_term() {$/;"	f
get_term_font	bin/neofetch	/^get_term_font() {$/;"	f
get_term_size	bin/neofetch	/^get_term_size() {$/;"	f
get_theme	bin/neofetch	/^get_theme() {$/;"	f
get_title	bin/neofetch	/^get_title() {$/;"	f
get_underline	bin/neofetch	/^get_underline() {$/;"	f
get_uptime	bin/neofetch	/^get_uptime() {$/;"	f
get_user_config	bin/neofetch	/^get_user_config() {$/;"	f
get_users	bin/neofetch	/^get_users() {$/;"	f
get_w3m_img_path	bin/neofetch	/^get_w3m_img_path() {$/;"	f
get_wallpaper	bin/neofetch	/^get_wallpaper() {$/;"	f
get_window_size	bin/neofetch	/^get_window_size() {$/;"	f
get_wm	bin/neofetch	/^get_wm() {$/;"	f
get_wm_theme	bin/neofetch	/^get_wm_theme() {$/;"	f
grey_colour	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:grey_colour(n)$/;"	f
grey_level	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:grey_level(n)$/;"	f
grey_number	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:grey_number(x)$/;"	f
has	bin/neofetch	/^    has() { type -p "$1" >\/dev\/null && manager="$_"; }$/;"	f
image_backend	bin/neofetch	/^image_backend() {$/;"	f
info	bin/neofetch	/^info() {$/;"	f
infoDisplay	bin/screenfetch	/^infoDisplay () {$/;"	f
itunes	zshrc_aliases.zsh	/^function itunes() {$/;"	f
kde_config_dir	bin/neofetch	/^kde_config_dir() {$/;"	f
main	bin/neofetch	/^main() {$/;"	f
make_thumbnail	bin/neofetch	/^make_thumbnail() {$/;"	f
man	zshrc_aliases.zsh	/^function man-preview() {$/;"	f
mate_get	bin/neofetch	/^                mate_get() {$/;"	f
mkdir_and_cd	zshrc_aliases.zsh	/^function mkdir_and_cd () { mkdir -p "$@" && eval cd "\\"\\$$#\\""; }$/;"	f
n	ptpython/config.py	/^        event.cli.current_buffer.insert_text('\\nimport pdb; pdb.set_trace()\\n')$/;"	i
old_functions	bin/neofetch	/^old_functions() {$/;"	f
pac	bin/neofetch	/^    pac() { (($1 > 0)) && { managers+=("$1 (${manager})"); manager_string+="${manager}, "; }; }$/;"	f
pdb	ptpython/config.py	/^        event.cli.current_buffer.insert_text('\\nimport pdb; pdb.set_trace()\\n')$/;"	i
pfd	zshrc_aliases.zsh	/^function pfd() {$/;"	f
pfs	zshrc_aliases.zsh	/^function pfs() {$/;"	f
prin	bin/neofetch	/^prin() {$/;"	f
print_info	bin/neofetch	/^                print_info() { printf '\\n'; }$/;"	f
print_info	bin/neofetch	/^                print_info() {$/;"	f
print_info	bin/neofetch	/^print_info() {$/;"	f
pushdf	zshrc_aliases.zsh	/^function pushdf() {$/;"	f
quick	zshrc_aliases.zsh	/^function quick-look() {$/;"	f
rgb	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:rgb(rgb)$/;"	f
rgb_colour	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:rgb_colour(x, y, z)$/;"	f
rgb_level	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:rgb_level(n)$/;"	f
rgb_number	vim-custom-code/plugins/color_devicons_alt.vim	/^    fun! s:rgb_number(x)$/;"	f
rmdsstore	zshrc_aliases.zsh	/^function rmdsstore() {$/;"	f
set_colors	bin/neofetch	/^set_colors() {$/;"	f
set_text_colors	bin/neofetch	/^set_text_colors() {$/;"	f
set_trace	ptpython/config.py	/^        event.cli.current_buffer.insert_text('\\nimport pdb; pdb.set_trace()\\n')$/;"	i
startify	vim-custom-code/startify.vim	/^augroup startify$/;"	a
stderrOut	bin/screenfetch	/^stderrOut () {$/;"	f
stdout	bin/neofetch	/^stdout() {$/;"	f
strip_sequences	bin/neofetch	/^strip_sequences() {$/;"	f
tab	zshrc_aliases.zsh	/^function tab() {$/;"	f
tabh	zshrc_aliases.zsh	/^function tabh() {$/;"	f
tabv	zshrc_aliases.zsh	/^function tabv() {$/;"	f
takeShot	bin/screenfetch	/^takeShot () {$/;"	f
term_padding	bin/neofetch	/^term_padding() {$/;"	f
to_ascii	bin/neofetch	/^to_ascii() {$/;"	f
to_off	bin/neofetch	/^to_off() {$/;"	f
tot	bin/neofetch	/^        tot() {$/;"	f
tot	bin/neofetch	/^    tot() { IFS=$'\\n' read -d "" -ra pkgs < <("$@");((packages+="${#pkgs[@]}"));pac "${#pkgs[@]}"; }$/;"	f
trim	bin/neofetch	/^trim() {$/;"	f
trim_quotes	bin/neofetch	/^trim_quotes() {$/;"	f
unicode_literals	ptpython/config.py	/^from __future__ import unicode_literals$/;"	i
usage	bin/neofetch	/^usage() { printf "%s" "\\$/;"	f
verboseOut	bin/screenfetch	/^verboseOut () {$/;"	f
